<div id="display1_header">
  <div class="text-large"><%= image_tag "logo_seti.png" %></div>
  <div class="text-title" style="padding-left:25px; width:1150px;">What We are Currently Scanning</div>
  <div class="text-title-dark-blue">Activity ID: </div>
  <div class="float-wall"></div>
</div>

<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 1 %>
<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 2 %>
<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 3 %>

<script type="text/javascript">

function drawWaterfallRows(id, start_row, end_row, data64)
{
  var waterfall_data = decode64(data64);

  var processingInstance = null;
  if (!processingInstance)
  {
    processingInstance = Processing.getInstanceById('canvas_waterfall' + id);
    processingInstance.drawWaterfallRows(id, start_row, end_row - start_row, waterfall_data);
  }
}

// AJAX call to update JSON
function updateWaterfall(id)
{
  if(updateWaterfall.waterfall_data == undefined)
  {
     updateWaterfall.waterfall_data = new Array();
  }

  if(updateWaterfall.waterfall_data[id] == undefined)
  {
    updateWaterfall.waterfall_data[id] = {data:"", last_row:1};
  }

  // Take id and make AJAX query
  $.ajax({
    type:     'GET',
    url:      '/display1/waterfall',
    data:     { id:id, start_row:updateWaterfall.waterfall_data[id].last_row },
    success:  function(response) {
      // store the last row we have so far, so that the next query gets the subsequent rows
      updateWaterfall.waterfall_data[id].last_row = response.endRow;
      if(updateWaterfall.waterfall_data[id].last_row >= <%= waterfall_height %> )
      {
        updateWaterfall.waterfall_data[id].last_row = 0;
      }

      drawWaterfallRows(response.id, response.startRow, response.endRow, response.data);
    },
    error:    function() {
      // We should handle error here
    },
    datatype: 'json'
  });
}

// Register waterfall display for automatic updates
$(document).ready(function()
{
  registerElementTimer(function() { updateWaterfall(1); }, 1500);
  registerElementTimer(function() { updateWaterfall(2); }, 1500);
  registerElementTimer(function() { updateWaterfall(3); }, 1500);
});

</script>