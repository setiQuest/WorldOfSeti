<!--
################################################################################
#
# File:    index.html.erb
# Project: World of SETI (WOS)
# Authors:     
#                  Alan Mak
#                  Anthony Tang
#                  Dia Kharrat
#                  Paul Wong
# 
# The initial source was worked on by students of Carnegie Mellon Silicon Valley
#
# Copyright 2011 The SETI Institute
#
# World of SETI is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
# 
# World of SETI is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with World of SETI.  If not, see<http://www.gnu.org/licenses/>.
# 
# Implementers of this code are requested to include the caption
# "Licensed through SETI" with a link to setiQuest.org.
# 
# For alternate licensing arrangements, please contact
# The SETI Institute at www.seti.org or setiquest.org. 
#
################################################################################
-->

<div id="display1_header">
  <div class="text-large"><%= image_tag "logo_seti.png" %></div>
  <div class="text-title" style="padding-left:25px; width:1150px;">Current Observations</div>
  <div class="text-title-dark-blue">Activity ID: <span id="activity-id">?</span></div>
  <div class="float-wall"></div>
</div>

<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 1 %>
<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 2 %>
<div class="divider-horizontal"></div>
<%= render 'beam', :beam_id => 3 %>

<script type="text/javascript">

function drawWaterfallRows(id, start_row, end_row, data64)
{
  var waterfall_data = decode64(data64);

  var processingInstance = null;
  if (!processingInstance)
  {
    processingInstance = Processing.getInstanceById('canvas_waterfall' + id);
    processingInstance.drawWaterfallRows(id, start_row, end_row - start_row, waterfall_data);
  }
}

// AJAX call to update JSON
function updateWaterfall(id)
{
  if(updateWaterfall.waterfall_data == undefined)
  {
     updateWaterfall.waterfall_data = new Array();
  }

  if(updateWaterfall.waterfall_data[id] == undefined)
  {
    updateWaterfall.waterfall_data[id] = {data:"", last_row:1};
  }

  // Take id and make AJAX query
  $.ajax({
    type:     'GET',
    url:      '<%= display1_waterfall_path %>',
    data:     { id:id, start_row:updateWaterfall.waterfall_data[id].last_row },
    success:  function(response) {
      // store the last row we have so far, so that the next query gets the subsequent rows
      updateWaterfall.waterfall_data[id].last_row = response.endRow;
      if(updateWaterfall.waterfall_data[id].last_row >= <%= waterfall_height %> )
      {
        updateWaterfall.waterfall_data[id].last_row = 0;
      }

      drawWaterfallRows(response.id, response.startRow, response.endRow, response.data);
    },
    error:    function() {
      // We should handle error here
    },
    datatype: 'json'
  });
}

function updateBaseline(id)
{
  // to bypass browser caching, we need to append a random parameter to the URL
  d = new Date();
  $('#baseline' + id).attr('src', '/display1/baseline_chart/' + id + '?' + d.getTime());
}

function updateBeamInfo(id)
{
  // Take id and make AJAX query
  $.ajax({
    type:     'GET',
    url:      '<%= display1_beam_path %>',
    data:     { id:id },
    success:  function(response) {
      $('#beam' + id + ' .beam_information_top .beam_status').text(response.status);
      $('#beam' + id + ' .beam_information_top .beam_frequency').text(response.frequency + ' MHz');
    },
    error:    function() {
      // We should handle error here
    },
    datatype: 'json'
  });
}

function updateActivity()
{
  // Take id and make AJAX query
  $.ajax({
    type:     'GET',
    url:      '<%= display1_activity_path %>',
    success:  function(response) {
      $('#activity-id').text(response.id);
    },
    error:    function() {
      // We should handle error here
    },
    datatype: 'json'
  });
}

// Register waterfall display for automatic updates
$(document).ready(function()
{
  registerElementTimer(function() { updateActivity(); }, 60000);

  registerElementTimer(function() { updateWaterfall(1); }, 2000);
  registerElementTimer(function() { updateBaseline(1); }, 60000);
  registerElementTimer(function() { updateBeamInfo(1); }, 10000);

  registerElementTimer(function() { updateWaterfall(2); }, 2000);
  registerElementTimer(function() { updateBaseline(2); }, 60000);
  registerElementTimer(function() { updateBeamInfo(2); }, 60000);

  registerElementTimer(function() { updateWaterfall(3); }, 2000);
  registerElementTimer(function() { updateBaseline(3); }, 60000);
  registerElementTimer(function() { updateBeamInfo(3); }, 60000);
});

</script>
